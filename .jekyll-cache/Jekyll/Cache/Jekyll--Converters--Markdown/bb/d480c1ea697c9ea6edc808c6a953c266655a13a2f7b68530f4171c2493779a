I"˜%<h1 id="detecci√≥n-de-spam">Detecci√≥n de spam</h1>
<p>La detecci√≥n de spam es una de las principales aplicaciones que las grandes compa√±√≠as tratan de mejorar para sus clientes. Gmail de Google es un buen ejemplo de una aplicaci√≥n en donde el detector de spam trabaja bien para proteger a sus usuarios mediante alertas de spam.</p>

<p>Cada vez que env√≠as detalles personales en cualquier plataforma, como tu correo electr√≥nico o tu n√∫mero telef√≥nico, est√°s permitiendo a esas plataformas comercializar sus productos anunci√°ndolos mediante el env√≠o de correos electr√≥nicos o enviando mensajes directamente a tu n√∫mero telef√≥nico. Esto da como resultado una gran cantidad de alertas y notificaciones de spam en tu bandeja de entrada. Aqu√≠ es en donde tiene lugar la tarea de detecci√≥n de spam.</p>

<p>La detecci√≥n de spam consiste en detectar los mensajes o correos electr√≥nicos no deseados mediante la comprensi√≥n del contenido del texto, de modo que s√≥lo pueda recibir notificaciones sobre los mensajes o correos electr√≥nicos que son relevantes para el usuario. Si se encuentran mensajes o correos no deseados, se transfieren autom√°ticamente a una carpeta de spam y nunca se le notifican dichas alertas al usuario. Esto ayuda a mejorar la experiencia del usuario, ya que muchas alertas de spam pueden resultar molestas.</p>

<hr />

<h2 id="detecci√≥n-de-spam-usando-python">Detecci√≥n de spam usando Python</h2>
<p>A continuaci√≥n, veremos como entrenar un modelo de aprendizaje autom√°tico (<strong>machine learning</strong>) para detectar spam usando Python. Comenzamos esta tarea importando las librer√≠as de Python y el set de datos que necesitaremos.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ow">in</span> <span class="p">[</span><span class="mi">1</span><span class="p">]:</span>     <span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
            <span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
            <span class="kn">from</span> <span class="nn">sklearn.feature_extraction.text</span> <span class="kn">import</span> <span class="n">CountVectorizer</span>
            <span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
            <span class="kn">from</span> <span class="nn">sklearn.naive_bayes</span> <span class="kn">import</span> <span class="n">MultinomialNB</span>

            <span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://raw.githubusercontent.com/amankharwal/SMS-Spam-Detection/master/spam.csv"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'latin-1'</span><span class="p">)</span>
            <span class="n">data</span><span class="p">.</span><span class="n">head</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>out [1]:        class       message                                             Unnamed:2   Unnamed:3   Unnamed:4  
            0 	ham 	    Go until jurong point, crazy.. Available only ... 	NaN 	    NaN 	    NaN
            1 	ham 	    Ok lar... Joking wif u oni...                       NaN 	    NaN 	    NaN
            2 	spam 	    Free entry in 2 a wkly comp to win FA Cup fina... 	NaN 	    NaN 	    NaN
            3 	ham 	    U dun say so early hor... U c already then say... 	NaN 	    NaN 	    NaN
            4 	ham 	    I don't think he goes to usf, he lives aro...       NaN 	    NaN 	    NaN  
</code></pre></div></div>

<p>En esta set de datos, las √∫nicas columnas que necesitamos para entrenar nuestro modelo para la detecci√≥n de spam son <code class="language-plaintext highlighter-rouge">class</code> y <code class="language-plaintext highlighter-rouge">message</code>, as√≠ que seleccionamos estas dos columnas como el nuevo set de datos:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ow">in</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span>     <span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[[</span><span class="s">"class"</span><span class="p">,</span> <span class="s">"message"</span><span class="p">]]</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>out [2]:        class 	    message
            0 	ham 	    Go until jurong point, crazy.. Available only ...
            1 	ham 	    Ok lar... Joking wif u oni...
            2 	spam 	    Free entry in 2 a wkly comp to win FA Cup fina...
            3 	ham 	    U dun say so early hor... U c already then say...
            4 	ham 	    Nah I don't think he goes to usf, he lives aro... 
</code></pre></div></div>
<p>Ahora, debemos separar este dataset en un set de entrenamiento y un set de prueba para poder entrenar nuestro modelo para detectar spam:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ow">in</span><span class="p">[</span><span class="mi">3</span><span class="p">]:</span>      <span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">"message"</span><span class="p">])</span>
            <span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">"class"</span><span class="p">])</span>
            <span class="n">cv</span> <span class="o">=</span> <span class="n">CountVectorizer</span><span class="p">()</span>
            <span class="n">X</span> <span class="o">=</span> <span class="n">cv</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> 
            <span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">x_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.33</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>

            <span class="n">clf</span> <span class="o">=</span> <span class="n">MultinomialNB</span><span class="p">()</span>
            <span class="n">clf</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>out [3]:    MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True)
</code></pre></div></div>
<p>Finalmente, probemos este modelo tomando la entrada de un usuario para detectar si es spam o no:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="ow">in</span> <span class="p">[</span><span class="mi">4</span><span class="p">]:</span>     <span class="n">mensaje</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"Escribe un mensaje:"</span><span class="p">)</span>
            <span class="n">data</span> <span class="o">=</span> <span class="n">cv</span><span class="p">.</span><span class="n">transform</span><span class="p">([</span><span class="n">mensaje</span><span class="p">]).</span><span class="n">toarray</span><span class="p">()</span>
            <span class="k">print</span><span class="p">(</span><span class="n">clf</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>**out** [4]:    Escribe un mensaje:Time is running out. Save 50%
            ['spam']
</code></pre></div></div>
<p><img src="/img/posts/2021-05-06-detector-spam/2021-05-06-detector-spam-machine-learning-3.png" alt="data.head()" /></p>

<hr />
<blockquote>
  <p><strong>NOTA</strong>: Debido a que el set de datos para este projecto est√° en idioma ingl√©s, el mensaje que proporcionar√° el usuario final deber√° estar escrito en este idioma.</p>
</blockquote>

<hr />

<p>As√≠ es como se puede usar el aprendizaje autom√°tico para entrenar un modelo para detectar si un correo electr√≥nico o un mensaje es spam.  Un detector de spam detecta mensajes o correos no deseados al comprender el contenido del texto, de este modo, usted solo recibir√° notificaciones sobre mensajes o correos electr√≥nicos que sean muy importantes.</p>

<p>Puedes descargar el cuaderno de Jupyter de este projecto <a href="https://drive.google.com/file/d/1Lgt3dR_uhDPAwlh_tLgdlVP_YaRL8yq_/view?usp=sharing">aqu√≠</a></p>
:ET