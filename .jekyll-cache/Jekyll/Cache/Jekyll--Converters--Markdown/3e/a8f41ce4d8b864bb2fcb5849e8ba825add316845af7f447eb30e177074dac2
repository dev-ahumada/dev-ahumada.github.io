I"óv<h1 id="qu√©-es-opencv">Qu√© es OpenCV?</h1>
<p>Python tiene m√∫ltiples librer√≠as para aplicaciones de la vida real. Una de esas librer√≠as es OpenCV, la cual es usada en Visi√≥n Computacional. Dicha librer√≠a incluye aplicaciones como captura y procesamiento de videos e im√°genes, siendo mayormente utilizada en transformaci√≥n de im√°genes, detecci√≥n de objetos y reconocimiento facial.</p>

<h1 id="qu√©-vamos-a-desarrollar">Qu√© vamos a desarrollar?</h1>
<p>Al final de este art√≠culo, nuestra meta es transformar una imagen en su caricatura. Para ello, construiremos una aplicaci√≥n en Python que convertir√° nuestra imagen en una caricatura usando OpenCV.</p>

<h1 id="imagen-original">Imagen original.</h1>
<p><img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-2.png" alt="Imagen Original" />
‚Äî</p>
<h1 id="pasos-para-desarrollar-nuestro-caricaturizador-de-im√°genes">Pasos para desarrollar nuestro Caricaturizador de im√°genes.</h1>
<hr />
<h2 id="paso-1-importar-los-m√≥dulos-que-vamos-a-necesitar">Paso 1: Importar los m√≥dulos que vamos a necesitar.</h2>
<p>Importaremos los siguientes m√≥dulos:</p>
<ul>
  <li>
    <p><strong>cv2</strong>: Es una librer√≠a altamente optimizada que se enfoca en aplicaciones en tiempo real.</p>
  </li>
  <li>
    <p><strong>easygui</strong>: M√≥dulo para la programaci√≥n GUI f√°cil y r√°pidamente en Python.</p>
  </li>
  <li>
    <p><strong>Numpy</strong>: Es una librer√≠a para Python con soporte para matrices y arrays grandes y multidimensionales, junto con una gran colecci√≥n de funciones matem√°ticas de alto nivel para operar en estas matrices.</p>
  </li>
  <li>
    <p><strong>Imageio</strong>: Es una librer√≠a que proporciona una interfaz f√°cil para leer y escribir una amplia gama de datos de im√°genes.</p>
  </li>
  <li>
    <p><strong>Matplotlib</strong>: Librer√≠a para crear visualizaciones est√°ticas, animadas e interactivas en Python.</p>
  </li>
  <li>
    <p><strong>os</strong>: Librer√≠a que nos proporciona funciones para interactuar con el sistema operativo.</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">cv2</span>
<span class="kn">import</span> <span class="nn">easygui</span> 
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">imageio</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">tkinter</span> <span class="k">as</span> <span class="n">tk</span>
<span class="kn">from</span> <span class="nn">tkinter</span> <span class="kn">import</span> <span class="n">messagebox</span>
<span class="kn">from</span> <span class="nn">tkinter</span> <span class="kn">import</span> <span class="n">filedialog</span>
<span class="kn">from</span> <span class="nn">tkinter</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">PIL</span> <span class="kn">import</span> <span class="n">ImageTk</span><span class="p">,</span> <span class="n">Image</span>
</code></pre></div></div>
<hr />

<h2 id="paso-2-construir-un-administrador-de-archivos-para-seleccionar-un-archivo-en-particular">Paso 2: Construir un administrador de archivos para seleccionar un archivo en particular</h2>
<p>En este paso, construimos la ventana principal donde se encontrar√°n los botones, etiquetas e im√°genes de nuestra aplicaci√≥n.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">cargar</span><span class="p">():</span>
    <span class="n">rutaImagen</span> <span class="o">=</span> <span class="n">easygui</span><span class="p">.</span><span class="n">fileopenbox</span><span class="p">()</span>
    <span class="n">caricaturizar</span><span class="p">(</span><span class="n">rutaImagen</span><span class="p">)</span>
</code></pre></div></div>
<p>El c√≥digo anterior lanza una ventana emergente para seleccionar un archivo de nuestro dispositivo cada vez que lo ejecutamos. El m√©todo <code class="language-plaintext highlighter-rouge">fileopenbox()</code> en el m√≥dulo <code class="language-plaintext highlighter-rouge">easyGUI</code> nos devuelve la ruta del archivo seleccionado en formato string.</p>

<hr />

<h2 id="paso-3-c√≥mo-almacenamos-una-imagen">Paso 3: ¬øC√≥mo almacenamos una imagen?</h2>
<p>Ahora debes preguntarte, ¬øc√≥mo nuestro programa procesar√° una imagen?. Debemos recordar que para nuestra computadora todo esta formado por n√∫meros. Por lo tanto, en el siguiente c√≥digo, usaremos Numpy para convertir nuestra imagen en un array.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">caricaturizar</span><span class="p">(</span><span class="n">ruta_imagen</span><span class="p">)</span>
<span class="c1"># leer la imagen
</span>    <span class="n">imagenOriginal</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imread</span><span class="p">(</span><span class="n">rutaImagen</span><span class="p">)</span>
    <span class="n">imagenOriginal</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">imagenOriginal</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2RGB</span><span class="p">)</span>
<span class="c1"># confirmar que la imagen ha sido seleccionada
</span>    <span class="k">if</span> <span class="n">imagenOriginal</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"No se encontr√≥ ninguna imagen. Elige un archivo apropiado"</span><span class="p">)</span>
        <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">()</span>
    
    <span class="n">redimen1</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">imagen_original</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">imread()</code> es un m√©todo de <code class="language-plaintext highlighter-rouge">cv2</code> que es usado para almacenar im√°genes en forma de arrays. Esto nos permite realizar operaciones de acuerdo con nuestras necesidades. La imagen es procesada como un array, cuyos valores representan los valores R, G, y B de cada pixel.</p>

<p><strong>NOTA</strong>: redimensionamos la imagen despu√©s de cada transformaci√≥n para desplegar todas las im√°genes en una escala similar.</p>

<p>Para convertir una imagen en una caricatura se requiere de muchas transformaciones. Primero, la imagen es convertida a escala de grises. Despu√©s, la imagen en escala de grises es suavizada, y tratamos de extraer los bordes de la imagen. Finalmente, formamos una imagen a color y la unimos con los bordes. Esto crea una caricatura con los bordes y los colores de la imagen original realzados.</p>

<hr />

<h2 id="paso-4-transformar-imagen-a-escala-de-grises">Paso 4: Transformar imagen a escala de grises</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Convertir imagen a escala de grises
</span>    <span class="n">imagenEscalaGrises</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">imagenOriginal</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
    <span class="n">redimen2</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">imagenEscalaGrises</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">cvtColor()</code> es un m√©todo de <code class="language-plaintext highlighter-rouge">cv2</code> que recibe una imagen como primer argumento y una <a href="https://docs.opencv.org/4.5.3/d8/d01/group__imgproc__color__conversions.html"><em>conversi√≥n de espacio de colores</em></a> como segundo argumento. En este caso hemos usado <code class="language-plaintext highlighter-rouge">BGR2GRAY</code> para convertir nuestra imagen a una escala de grises.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado:<br />
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-3.png" alt="Imagen en escala de grises" /></p>

<hr />

<h2 id="paso-5-suavizar-imagen-en-escala-de-grises">Paso 5: Suavizar imagen en escala de grises</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Aplicar medianBlur para suavizar imagen
</span>    <span class="n">escalaGriseSuavizada</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">meadianBlur</span><span class="p">(</span><span class="n">imagenEscalaGrises</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">redimen3</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">escalaGriseSuavizada</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p>Para suavizar una imagen simplemente aplicamos un efecto de desenfoque. Esto lo hacemos usando la funci√≥n <code class="language-plaintext highlighter-rouge">medianBlur()</code>, la cual reemplaza el elemento central de la imagen por la mediana de todos los pixeles en el √°rea del kernel. Esta operaci√≥n procesa los bordes mientras elimina el ruido, creando un efecto de desenfoque.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado:
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-4.png" alt="Imagen suavizada" /></p>

<hr />

<h2 id="paso-6-recuperar-los-bordes-de-la-imagen">Paso 6: Recuperar los bordes de la imagen</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#recuperando los bordes de imagen para efecto caricatura
</span>    <span class="n">bordesImagen</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">adaptiveThreshold</span><span class="p">(</span><span class="n">escalaGriseSuavizada</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> 
                    <span class="n">cv2</span><span class="p">.</span><span class="n">ADAPTIVE_THRESH_MEAN_C</span><span class="p">,</span> 
                    <span class="n">cv2</span><span class="p">.</span><span class="n">THRESH_BINARY</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span>

    <span class="n">redimen4</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">bordesImagen</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span><span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p>El efecto de caricatura tiene dos caracter√≠sticas:</p>
<ol>
  <li>Bordes remarcados</li>
  <li>Colores suaves</li>
</ol>

<p>En este paso, trabajaremos en la primer caracter√≠stica. Trataremos de recuperar los bordes y remarcarlos. Esto lo logramos con el uso del m√©todo <code class="language-plaintext highlighter-rouge">adaptiveThreshold()</code>.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado:
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-5.png" alt="Bordes" /></p>

<hr />

<h2 id="paso-7-preparar-imagen-a-color">Paso 7: Preparar imagen a color</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#aplicar filtro bilateral para remover ruido
</span>    <span class="n">imagenColor</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">bilateralFilter</span><span class="p">(</span><span class="n">imagenOriginal</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
    <span class="n">redimen5</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">imagenColor</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p>En el c√≥digo anterior, trabajamos en la segunda caracter√≠stica. Hemos preparado una imagen colorida para unirla con los bordes y crear un efecto de caricatura. Usando el m√©todo <code class="language-plaintext highlighter-rouge">bilateralFilter()</code> removemos el ruido y la aspereza en los colores.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado:<br />
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-6.png" alt="Imagen a color" /></p>

<hr />
<h2 id="paso-8-aplicar-efecto-de-caricatura-a-imagen">Paso 8: Aplicar efecto de caricatura a imagen</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#unir bordes con nuestra imagen a color
</span>    <span class="n">imagenCaricaturizada</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">bitwise_and</span><span class="p">(</span><span class="n">imagenColor</span><span class="p">,</span> <span class="n">imagenColor</span><span class="p">,</span> <span class="n">mask</span><span class="o">=</span><span class="n">bordesImagen</span><span class="p">)</span>
    <span class="n">redimen6</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">imagenCaricaturizada</span><span class="p">,</span> <span class="p">(</span><span class="mi">960</span><span class="p">,</span> <span class="mi">540</span><span class="p">))</span>
</code></pre></div></div>
<p>Es momento de combinar las dos caracter√≠sticas. Esto podemos lograrlo realizando un ‚Äúenmascarado‚Äù. Mediante el m√©todo <code class="language-plaintext highlighter-rouge">bitwise_and</code> enmascaramos las dos im√°genes previamente obtenidas. Esto finalmente ‚Äúcaricaturizar√°‚Äù nuestra imagen.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado: 
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-7.png" alt="Imagen caricaturizada" /></p>

<hr />

<h2 id="paso-9-plotear-todas-las-transiciones-juntas">Paso 9: Plotear todas las transiciones juntas</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Plotear todas las transiciones
</span>    <span class="n">imagenes</span> <span class="o">=</span> <span class="p">[</span><span class="n">redimen1</span><span class="p">,</span> <span class="n">redimen2</span><span class="p">,</span> <span class="n">redimen3</span><span class="p">,</span> <span class="n">redimen4</span><span class="p">,</span> <span class="n">redimen5</span><span class="p">,</span> <span class="n">redimen6</span><span class="p">]</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mf">8.8</span><span class="p">),</span>
                <span class="n">subplot_kw</span><span class="o">=</span><span class="p">{</span><span class="s">'xticks'</span><span class="p">:[],</span> <span class="s">'yticks'</span><span class="p">:[]},</span> 
                <span class="n">gridspec_kw</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">hspace</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">wspace</span><span class="o">=</span><span class="mf">0.1</span><span class="p">))</span>
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">ax</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">axes</span><span class="p">.</span><span class="n">flat</span><span class="p">):</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">images</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'gray'</span><span class="p">)</span>

    <span class="o">//</span><span class="n">c√≥digo</span> <span class="n">bot√≥n</span> <span class="n">guardado</span>

    <span class="n">plt</span><span class="p">.</span><span class="n">show</span>
</code></pre></div></div>
<p>Para plotear todas las im√°genes, primero debemos hacer una lista de ellas. La lista es llamada <code class="language-plaintext highlighter-rouge">imagenes</code> y contiene todas las im√°genes redimensionadas. Despu√©s, creamos una figura para plotear una a una las im√°genes en cada subplot usando el m√©todo <code class="language-plaintext highlighter-rouge">imshow()</code>.<br />
Finalmente, la funci√≥n <code class="language-plaintext highlighter-rouge">plt.show()</code> plotea todas las transiciones en un solo plot.</p>

<p>El c√≥digo anterior producir√° el siguiente resultado: 
<img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-1.png" alt="Todas las im√°genes" /></p>

<hr />

<h2 id="paso-10-crear-la-ventana-principal">Paso 10: Crear la ventana principal</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ventanaPrincipal</span> <span class="o">=</span> <span class="n">tk</span><span class="p">.</span><span class="n">Tk</span><span class="p">()</span>
<span class="n">ventanaPrincipal</span><span class="p">.</span><span class="n">geometry</span><span class="p">(</span><span class="s">'400x400'</span><span class="p">)</span>
<span class="n">ventanaPrincipal</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Caricaturiza tu imagen'</span><span class="p">)</span>
<span class="n">ventanaPrincipal</span><span class="p">.</span><span class="n">configure</span><span class="p">(</span><span class="n">background</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">etiqueta</span> <span class="o">=</span> <span class="n">Label</span><span class="p">(</span><span class="n">ventanaPrincipal</span><span class="p">,</span> <span class="n">background</span><span class="o">=</span><span class="s">'#CDCDCD'</span><span class="p">,</span> <span class="n">font</span><span class="o">=</span><span class="p">(</span><span class="s">'calibri'</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="s">'bold'</span><span class="p">))</span>
</code></pre></div></div>
<hr />

<h2 id="paso-11-crear-bot√≥n-caricaturizar-en-ventana-principal">Paso 11: Crear bot√≥n caricaturizar en ventana principal</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">botonCaricaturizar</span> <span class="o">=</span> <span class="n">Button</span><span class="p">(</span><span class="n">ventanaPrincipal</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s">"Caricaturizar una imagen"</span><span class="p">,</span> 
                            <span class="n">command</span><span class="o">=</span><span class="n">cargar</span><span class="p">,</span> <span class="n">padx</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">pady</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">botonCaricaturizar</span><span class="p">.</span><span class="n">configure</span><span class="p">(</span><span class="n">background</span><span class="o">=</span><span class="s">'#364156'</span><span class="p">,</span> <span class="n">foreground</span><span class="o">=</span><span class="s">'white'</span><span class="p">,</span> <span class="n">font</span><span class="o">=</span><span class="p">(</span><span class="s">'calibri'</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">'bold'</span><span class="p">))</span>
<span class="n">botonCaricaturizar</span><span class="p">.</span><span class="n">pack</span><span class="p">(</span><span class="n">side</span><span class="o">=</span><span class="n">TOP</span><span class="p">,</span> <span class="n">pady</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-8.png" alt="Boton caricaturizar" /></p>

<hr />

<h2 id="paso-12-crear-bot√≥n-guardar-en-ventana-principal">Paso 12: Crear bot√≥n ‚ÄúGuardar‚Äù en ventana principal</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">botonGuardar</span> <span class="o">=</span> <span class="n">Button</span><span class="p">(</span><span class="n">ventanaPrincipal</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="s">'Guardar imagen caricaturizada'</span><span class="p">,</span> 
                      <span class="n">command</span><span class="o">=</span><span class="k">lambda</span><span class="p">:</span> <span class="n">guardar</span><span class="p">(</span><span class="n">redimen6</span><span class="p">,</span> <span class="n">rutaImagen</span><span class="p">),</span> <span class="n">padx</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">pady</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">botonGuardar</span><span class="p">.</span><span class="n">configure</span><span class="p">(</span><span class="n">background</span><span class="o">=</span><span class="s">'#364156'</span><span class="p">,</span> <span class="n">foreground</span><span class="o">=</span><span class="s">'white'</span><span class="p">,</span>
                       <span class="n">font</span><span class="o">=</span><span class="p">(</span><span class="s">'calibri'</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="s">'bold'</span><span class="p">))</span>
<span class="n">botonGuardar</span><span class="p">.</span><span class="n">pack</span><span class="p">(</span><span class="n">side</span><span class="o">=</span><span class="n">TOP</span><span class="p">,</span> <span class="n">pady</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</code></pre></div></div>
<p>El c√≥digo anterior crea un bot√≥n tan pronto como la transformaci√≥n de la imagen es hecha. D√°ndole al usuario la opci√≥n de guardar la imagen caricaturizada.</p>

<p><img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-9.png" alt="Boton guardado" /></p>

<hr />

<h2 id="paso-13-crear-mensaje-de-guardado">Paso 13: Crear mensaje de guardado</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">guardar</span><span class="p">(</span><span class="n">redimen6</span><span class="p">,</span> <span class="n">rutaImagen</span><span class="p">):</span>
    <span class="c1">#guardar imagen usando imwrite()
</span>    <span class="n">nombreNuevo</span> <span class="o">=</span> <span class="s">"imagen_caricaturizada"</span>
    <span class="n">ruta1</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">rutaImagen</span><span class="p">)</span>
    <span class="n">extension</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">splitext</span><span class="p">(</span><span class="n">rutaImagen</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">ruta</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">ruta1</span><span class="p">,</span> <span class="n">nombreNuevo</span><span class="o">+</span><span class="n">extension</span><span class="p">)</span>
    <span class="n">cv2</span><span class="p">.</span><span class="n">imwrite</span><span class="p">(</span><span class="n">ruta</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">redimen6</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_RGB2BGR</span><span class="p">))</span>
    <span class="n">mensaje</span> <span class="o">=</span> <span class="s">"Imagen guardada como "</span> <span class="o">+</span> <span class="n">nombreNuevo</span> <span class="o">+</span> <span class="s">"en "</span> <span class="o">+</span> <span class="n">path</span>
    <span class="n">messagebox</span><span class="p">.</span><span class="n">showinfo</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">message</span><span class="o">=</span><span class="n">mensaje</span><span class="p">)</span>
</code></pre></div></div>
<p>En este paso, la idea es guardar nuestra imagen caricaturizada. Para esto, tomamos <code class="language-plaintext highlighter-rouge">rutaImagen</code> y cambiamos el nombre del antiguo archivo por un nuevo nombre. Posteriormente, almacenamos la imagen caricaturizada en la misma carpeta que <code class="language-plaintext highlighter-rouge">imagenOriginal</code> agregando el nuevo nombre al t√≠tulo del archivo.</p>

<p>Para esto, extraemos el t√≠tulo del archivo usando el m√©todo <code class="language-plaintext highlighter-rouge">os.path.dirname()</code>. Adem√°s, el m√©todo <code class="language-plaintext highlighter-rouge">os.path.splitext()</code> es usado para extraer la extensi√≥n del archivo.</p>

<p>La variable <code class="language-plaintext highlighter-rouge">nombreNuevo</code> almacena <code class="language-plaintext highlighter-rouge">"imagen_caricaturizada"</code> como el nombre de un nuevo archivo. Mientras que la expresi√≥n <code class="language-plaintext highlighter-rouge">os.path.join(ruta1, nombreNuevo+extension)</code> concatena el directorio del archivo con su nuevo nombre y extensi√≥n. Esto forma la ruta completa para nuestro nuevo archivo.</p>

<p>El m√©todo <code class="language-plaintext highlighter-rouge">imwrite()</code> de la librer√≠a <code class="language-plaintext highlighter-rouge">cv2</code> es usado para guardar el archivo en la ruta mencionada anteriormente. La expresi√≥n <code class="language-plaintext highlighter-rouge">cv2.cvtColor(redimen6, cv2.COLOR_RGB2BGR)</code> es usada para asegurar que ning√∫n color se extraiga o resalte mientras guardamos nuestra imagen. As√≠, finalmente, se le da al usuario la confirmaci√≥n de que la imagen ha sido guardada con el nombre y la ruta del archivo.</p>

<p><img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-10.png" alt="Mensaje guardado" /></p>

<hr />

<h2 id="paso-14-funci√≥n-principal-para-ejecutar-tkinter">Paso 14: Funci√≥n principal para ejecutar Tkinter</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ventanaPrincipal</span><span class="p">.</span><span class="n">mainloop</span><span class="p">()</span>
</code></pre></div></div>
<hr />
<h1 id="resultado-final">Resultado final</h1>
<p><img src="/img/posts/2021-05-03-caricaturizar-imagen-opencv-python/2021-05-03-caricaturizar-imagen-opencv-python-11.png" alt="Resultado final" /></p>

<hr />
<p>Puedes descargar el c√≥digo fuente del projecto <em>Caricaturizar imagen en Python</em> <a href="https://drive.google.com/file/d/1Ius1RFI-0CzkL89fOmb-EZfBtKrUp4lB/view?usp=sharing">aqu√≠</a></p>
:ET